---
import type { Props } from '../props';
import Icon from '../user-components/Icon.astro';
---

{/* This is intentionally inlined to avoid FOUC. */}
<script is:inline>
	if (!window.StarlightThemeProvider) {
		window.StarlightThemeProvider = (() => {
			const getTheme = () => {
				return typeof localStorage !== 'undefined' && localStorage.getItem('starlight-theme');
			};

			const initialTheme =
				getTheme() ||
				(window.matchMedia('(prefers-color-scheme: light)').matches ? 'light' : 'dark');

			document.documentElement.dataset.theme = initialTheme === 'light' ? 'light' : 'dark';

			return {
				updatePickers(theme) {
					const effectiveTheme = theme || getTheme() || 'auto';

					document.querySelectorAll('starlight-theme-select').forEach((picker) => {
						const select = picker.querySelector('select');
						if (select) select.value = effectiveTheme;
						/** @type {HTMLTemplateElement | null} */
						const tmpl = document.querySelector(`#theme-icons`);
						const newIcon = tmpl && tmpl.content.querySelector('.' + effectiveTheme);
						if (newIcon) {
							const oldIcon = picker.querySelector('svg.label-icon');
							if (oldIcon) {
								oldIcon.replaceChildren(...newIcon.cloneNode(true).childNodes);
							}
						}
					});
				},
			};
		})();
	}
</script>

<template id="theme-icons">
	<Icon name="sun" class="light" />
	<Icon name="moon" class="dark" />
	<Icon name="laptop" class="auto" />
</template>
